apiVersion: v1
kind: ConfigMap
metadata:
  name: business-mail-rspamd

  labels:
    app.kubernetes.io/name: mail
    app.kubernetes.io/component: rspam

data:
  worker-proxy.inc: |
    bind_socket = "*:11332";

    upstream "local" {
      default = yes;
      self_scan = yes;
    }

    milter = true;

    reject_message = "This message does not meet our delivery requirements";

  worker-normal.inc: |
    bind_socket = "*:11333";
    task_timeout = 25s;
    count = 1;
    .include(try=true; priority=30) "$CONFDIR/override.d/worker-normal.custom.inc"

  worker-controller.inc: |
    bind_socket = "*:11334";
    count = 1;
    secure_ip = "127.0.0.1";
    secure_ip = "::1";
    bind_socket = "/var/lib/rspamd/rspamd.sock mode=0666 owner=nobody";
    .include(try=true; priority=10) "$CONFDIR/override.d/worker-controller-password.inc"
    .include(try=true; priority=30) "$CONFDIR/override.d/worker-controller.custom.inc" 

  redis.conf: |
    # just specifying a server enables redis for all modules that can use it
    servers = "redis.mylogin.space";

  classifier-bayes.conf: |
    autolearn = true;
    backend = "redis";

  dkim_signing.conf: |
    enabled = true;
    # If false, messages with empty envelope from are not signed
    allow_envfrom_empty = true;

    # If true, envelope/header domain mismatch is ignored
    allow_hdrfrom_mismatch = true;

    # If true, multiple from headers are allowed (but only first is used)
    allow_hdrfrom_multiple = false;

    # If true, username does not need to contain matching domain
    allow_username_mismatch = true;

    # Default path to key, can include '$domain' and '$selector' variables
    path = "/secret/dkim.key";

    # Default selector to use
    selector = "selector1";
    # If false, messages from authenticated users are not selected for signing
    sign_authenticated = true;
    # If false, messages from local networks are not selected for signing
    sign_local = true;
    # Symbol to add when message is signed
    symbol = "DKIM_SIGNED";
    # Whether to fallback to global config
    try_fallback = true;
    # Domain to use for DKIM signing: can be "header" or "envelope"
    use_domain = "header";
    # Whether to normalise domains to eSLD
    use_esld = true;
    # Whether to get keys from Redis
    use_redis = false;

    # Domain specific settings
    domain {
      # Domain name is used as key
      mail.mylogin.space {

        # Private key path
        path = "/secret/dkim.key";

        # Selector
        selector = "selector1";
      }
    }

  mx_check.conf: |
    # checks if sender's domain has at least one connectable MX record
    enabled = true;

  phishing.conf: |
    # check messages against some anti-phishing databases
    openphish_enabled = true;
    phishtank_enabled = true;

  replies.conf: |
    # whitelist messages from threads that have been replied to
    action = "no action";

  surbl.conf: |
    # follow redirects when checking URLs in emails for spaminess
    redirector_hosts_map = "/usr/local/etc/rspamd/redirectors.inc";

  url_reputation.conf: |
    # check URLs within messages for spaminess
    enabled = true;

  url_tags.conf: |
    # cache some URL tags in redis
    enabled = true;