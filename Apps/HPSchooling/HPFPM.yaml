apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-business-hpschool-fpm-helm
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
  template:
    metadata:
      name: '{{cluster}}-business-hpschool-fpm-helm'
    spec:
      project: core
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        syncOptions:
          - CreateNamespace=true
      source:
        repoURL: https://k8s-at-home.com/charts/
        chart: nginx-php
        path: nginx-php
        targetRevision: 1.0.0
        helm:
          releaseName: hpschool-fpm
          values: |
            # -- environment variables. See more environment variables in the [nginx-php documentation](https://nginx-php.org/docs).
            # @default -- See below
            env:
              # -- Set the container timezone
              TZ: UTC

            # -- Configures service settings for the chart.
            # @default -- See values.yaml
            service:
              main:
                ports:
                  http:
                    port: 8080

            # -- Overwrites default config files for nginx or php/php-fpm if enabled.
            # @default -- See https://github.com/TrafeX/docker-php-nginx/tree/master/config for defaults
            config:
              nginx-server.conf: {}

              php-settings.ini: {}

              php-fpm-server.conf: {}

            podSecurityContext:
              runAsUser: 0
              runAsGroup: 0
              fsGroup: 0
            
            securityContext:
              runAsUser: 0
              allowPrivilegeEscalation: false

            ingress:
              # -- Enable and configure ingress settings for the chart under this key.
              # @default -- See values.yaml
              main:
                enabled: true
                ingressClassName: traefik-core
                labels:
                  wan-mode: 'public'
                  lan-mode: 'private'
                annotations:
                  cert-manager.io/cluster-issuer: kjdev-cluster
                  external-dns.alpha.kubernetes.io/target: k0s-dc1.resolvemy.host.
                  traefik.ingress.kubernetes.io/router.entrypoints: websecure
                  traefik.ingress.kubernetes.io/router.tls: 'true'
                hosts:
                  - host: hpphp.writemy.codes
                    paths:
                      - path: /
                        pathType: Prefix
                          
                tls:
                  - hosts:
                      - '*.writemy.codes'
                    secretName: writemycodes-default-certificates

            # -- Configure persistence settings for the chart under this key.
            # @default -- See values.yaml
            persistence:
              data:
                enabled: true
                mountPath: /var/www/html
                existingClaim: hpschool-phpcore

            addons:
              codeserver:
                # -- Enable running a code-server container in the pod
                enabled: true

                # -- Set any environment variables for code-server here
                env: {}
                  # TZ: UTC

                # -- Set codeserver command line arguments.
                # Consider setting --user-data-dir to a persistent location to preserve code-server setting changes
                args:
                  - --auth
                  - none
                  # - --user-data-dir
                  # - "/config/.vscode"

                # -- Specify a list of volumes that get mounted in the code-server container.
                # At least 1 volumeMount is required!
                volumeMounts:
                  - name: data
                    mountPath: /data/config

                # -- Specify the working dir that will be opened when code-server starts
                # If not given, the app will default to the mountpah of the first specified volumeMount
                workingDir: ""

                # -- Optionally allow access a Git repository by passing in a private SSH key
                # @default -- See below
                git:
                  # -- Raw SSH private key
                  deployKey: ""
                  # -- Base64-encoded SSH private key. When both variables are set, the raw SSH key takes precedence.
                  deployKeyBase64: ""
                  # -- Existing secret containing SSH private key
                  # The chart expects it to be present under the `id_rsa` key.
                  deployKeySecret: ""

                service:
                  # -- Enable a service for the code-server add-on.
                  enabled: true
                  type: ClusterIP
                  # Specify the default port information
                  ports:
                    codeserver:
                      port: 12321
                      enabled: true
                      protocol: TCP
                      targetPort: codeserver
                      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
                      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                      ##
                      # nodePort:
                  # -- Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
                  ipFamilyPolicy: SingleStack
                  # -- The ip families that should be used. Options: IPv4, IPv6
                  ipFamilies:
                    - IPv4

                ingress:
                  # -- Enable an ingress for the code-server add-on.
                  enabled: true
                  annotations:
                    cert-manager.io/cluster-issuer: kjdev-cluster
                    external-dns.alpha.kubernetes.io/target: k0s-dc1.resolvemy.host.
                    traefik.ingress.kubernetes.io/router.entrypoints: websecure
                    traefik.ingress.kubernetes.io/router.tls: 'true'
                    ingress.pomerium.io/allowed_idp_claims: '{"groups": ["Server", "Network"]}'
                    traefik.ingress.kubernetes.io/router.middlewares: core-prod-pomerium-auth@kubernetescrd
                  labels:
                    wan-mode: 'public'
                    lan-mode: 'private'
                  hosts:
                    - host: hpcode.writemy.codes
                      paths:
                        - path: /
                          # Ignored if not kubeVersion >= 1.14-0
                          pathType: Prefix
                  tls:
                    - hosts:
                        - '*.writemy.codes'
                      secretName: writemycodes-default-certificates


                securityContext:
                  runAsUser: 0

      destination:
        server: '{{url}}'
        namespace: core-prod
