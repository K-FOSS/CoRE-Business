apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: core-business-vaultwarden-helm
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: k0s-cntrl
            url: https://k0s-dc1-kubernetes-default.service.dc1.kjdev:6443
            ingress: bitwarden.kristianjones.dev
            environment: 'prod'
  template:
    metadata:
      name: '{{cluster}}-business-vaultwarden-helm'
    spec:
      project: core
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        syncOptions:
          - CreateNamespace=true
      source:
        repoURL: https://k8s-at-home.com/charts/
        chart: vaultwarden
        path: vaultwarden
        targetRevision: 4.1.0
        helm:
          releaseName: vaultwarden-prod
          values: |
            image:
              # -- image repository
              repository: vaultwarden/server
              # -- image pull policy
              pullPolicy: IfNotPresent
              # -- image tag
              tag: 1.22.2

            strategy:
              type: Recreate

            # -- environment variables. See [image docs](https://github.com/dani-garcia/vaultwarden/blob/main/.env.template) for more details.
            # @default -- See below
            env:
            # -- Config dir
              DATA_FOLDER: "/tmp"
              DOMAIN: https://bitwarden.kristianjones.dev

              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    key: DBURI
                    name: business-vaultwarden-database-{{ environment }}

            # -- Configures service settings for the chart. Normally this does not need to be modified.
            # @default -- See values.yaml
            service:
              main:
                ports:
                  http:
                    port: 80
                  websocket:
                    enabled: true
                    port: 3012

            ingress:
              # -- Enable and configure ingress settings for the chart under this key.
              # @default -- See values.yaml
              main:
                enabled: true
                ingressClassName: traefik-core
                labels:
                  wan-mode: 'public'
                  lan-mode: 'private'
                annotations:
                  cert-manager.io/cluster-issuer: kjdev-cluster
                  external-dns.alpha.kubernetes.io/target: k0s-dc1.resolvemy.host.
                  traefik.ingress.kubernetes.io/router.entrypoints: websecure
                  traefik.ingress.kubernetes.io/router.tls: 'true'
                hosts:
                  - host: {{ ingress }}
                    paths:
                      - path: /
                        pathType: Prefix

                      - path: /notifications/hub/negotiate
                        pathType: Prefix

                      - path: /notifications/hub
                        pathType: Prefix
                tls:
                  - hosts:
                      - '*.kristianjones.dev'
                    secretName: kristianjonesdev-default-certificates


            # -- Configure persistence settings for the chart under this key.
            # @default -- See values.yaml
            persistence:
              config:
                enabled: false

            # https://github.com/bitnami/charts/tree/master/bitnami/mariadb/#installing-the-chart
            mariadb:
              enabled: false
              # primary:
              #   persistence:
              #     enabled: true
              # auth:
              #   username: "username"
              #   password: "password"
              #   database: database

            # https://github.com/bitnami/charts/tree/master/bitnami/postgresql/#installing-the-chart
            postgresql:
              enabled: false
              # postgresqlUsername: ""
              # postgresqlPassword: ""
              # postgresqlDatabase: ""
              # persistence:
              #   enabled: true
              #   storageClass:
              #   accessModes:
              #     - ReadWriteOnce


      destination:
        server: '{{url}}'
        namespace: core-prod
