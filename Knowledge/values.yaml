monica:
  #
  # IMPORTANT NOTE
  #
  # This chart inherits from our common library chart. You can check the default values/options here:
  # https://github.com/geek-cookbook/library-charts/tree/main/charts/stable/common/values.yaml
  #
  enabled: true

  image:
    # -- image repository
    repository: monica
    # -- image tag
    # @default -- chart.appVersion
    tag:
    # -- image pull policy
    pullPolicy: IfNotPresent

  # -- environment variables. See [monica documentation](https://raw.githubusercontent.com/monicahq/monica/master/.env.example) for more details.
  # @default -- See below
  env:
    # -- Set the container timezone
    TZ: UTC
    # -- Use `local` if you want to install Monica as a development version. Use `production` otherwise.
    APP_ENV: production
    # APP_KEY -- The encryption key. This is the most important part of the application.
    # Keep this secure otherwise, everyone will be able to access your application.
    # Must be 32 characters long exactly.
    # Use `php artisan key:generate` or `echo -n 'base64:'; openssl rand -base64 32` to generate a random key.
    # -- The URL of your application.
    APP_URL: https://humans.mylogin.space
    
    DB_HOST: 172.18.67.224

    DB_DATABASE:
      valueFrom:
        secretKeyRef:
          name: monica-database
          key: DB

    DB_USERNAME:
      valueFrom:
        secretKeyRef:
          name: monica-database
          key: USER
    
    DB_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: monica-database
          key: PASSWORD

  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      ports:
        http:
          port: 80

  probes:
    # -- Liveness probe configuration
    # @default -- See below
    liveness:
      # -- Enable the liveness probe
      enabled: true
      # -- Set this to `true` if you wish to specify your own livenessProbe
      custom: false
      # -- The spec field contains the values for the default livenessProbe.
      # If you selected `custom: true`, this field holds the definition of the livenessProbe.
      # @default -- See below
      spec:
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3

    # -- Redainess probe configuration
    # @default -- See below
    readiness:
      # -- Enable the readiness probe
      enabled: true
      # -- Set this to `true` if you wish to specify your own readinessProbe
      custom: false
      # -- The spec field contains the values for the default readinessProbe.
      # If you selected `custom: true`, this field holds the definition of the readinessProbe.
      # @default -- See below
      spec:
        initialDelaySeconds: 0
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3

    # -- Startup probe configuration
    # @default -- See below
    startup:
      # -- Enable the startup probe
      enabled: true
      # -- Set this to `true` if you wish to specify your own startupProbe
      custom: false
      # -- The spec field contains the values for the default startupProbe.
      # If you selected `custom: true`, this field holds the definition of the startupProbe.
      # @default -- See below
      spec:
        initialDelaySeconds: 0
        timeoutSeconds: 1
        ## This means it has a maximum of 5*30=150 seconds to start up before it fails
        periodSeconds: 60
        failureThreshold: 60


  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See values.yaml
    main:
      enabled: false

  # -- Configure persistence settings for the chart under this key.
  # @default -- See values.yaml
  persistence:
    config:
      enabled: false
      mountPath: /var/www/html/storage

  # -- Enable and configure mariadb database subchart under this key.
  #    For more options see [mariadb chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/mariadb)
  # @default -- See values.yaml
  mariadb:
    enabled: false
    architecture: standalone
    auth:
      database: monica
      username: monica
      password: monicapass
      rootPassword: monicarootpass
    primary:
      persistence:
        enabled: false
        # storageClass: ""


outline:
  name: k0s-cntrl-business-knowledge-outline   

  image:
    repository: outlinewiki/outline
    pullPolicy: IfNotPresent
    tag: latest

  securityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false

  podSecurityContext:
    runAsUser: 0
    runAsGroup: 0

  env:
    FORCE_HTTPS: false
    PGSSLMODE: "disable"
    PORT: "{{ .Values.service.main.ports.main.port }}"
    # User defined
    URL: "https://outline.mylogin.space:443"
    SLACK_MESSAGE_ACTIONS: true
    ENABLE_UPDATES: true
    WEB_CONCURRENCY: 1
    MAXIMUM_IMPORT_SIZE: 5120000
    DEFAULT_LANGUAGE: "en_US"
    # TEAM_LOGO: ""
    # COLLABORATION_URL: ""
    # SLACK_KEY: ""
    # SLACK_SECRET: ""
    # SLACK_VERIFICATION_TOKEN: ""
    # SLACK_APP_ID: ""
    # GOOGLE_CLIENT_ID: ""
    # GOOGLE_CLIENT_SECRET: ""
    # GOOGLE_ANALYTICS_ID: ""
    # AZURE_CLIENT_ID: ""
    # AZURE_CLIENT_SECRET: ""
    # AZURE_RESOURCE_APP_ID: ""
    OIDC_CLIENT_ID:
      secretKeyRef:
        name: business-knowledge-outline-oidc
        key: OpenIDClientID

    OIDC_CLIENT_SECRET:
      secretKeyRef:
        name: business-knowledge-outline-oidc
        key: OpenIDClientSecret
    
    OIDC_AUTH_URI: https://idp.mylogin.space/application/o/authorize/
    OIDC_TOKEN_URI: https://idp.mylogin.space/application/o/token/
    OIDC_USERINFO_URI: https://idp.mylogin.space/application/o/userinfo/
    # OIDC_USERNAME_CLAIM: ""
    OIDC_DISPLAY_NAME: "Authentik"
    # OIDC_SCOPES: ""
    # SENTRY_DSN: ""
    AWS_ACCESS_KEY_ID:
      secretKeyRef:
        name: business-knowledge-outline-s3
        key: S3AccessKey
    
    AWS_SECRET_ACCESS_KEY:
      secretKeyRef:
        name: business-knowledge-outline-s3
        key: S3SecretAccessKey

    AWS_REGION: us-east-1

    # AWS_S3_ACCELERATE_URL: ""
    AWS_S3_UPLOAD_BUCKET_URL: https://s3.mylogin.space
    AWS_S3_UPLOAD_BUCKET_NAME:
      secretKeyRef:
        name: business-knowledge-outline-s3
        key: S3Bucket

    # AWS_S3_UPLOAD_MAX_SIZE: 26214400
    AWS_S3_FORCE_PATH_STYLE: true
    # AWS_S3_ACL: ""
    # SMTP_HOST: ""
    # SMTP_PORT: 587
    # SMTP_USERNAME: ""
    # SMTP_PASSWORD: ""
    # SMTP_FROM_EMAIL: ""
    # SMTP_REPLY_EMAIL: ""
    # SMTP_SECURE: true

    DATABASE_URL: 
      secretKeyRef:
        name: business-knowledge-outline-db
        key: DBURI

    REDIS_URL: redis://10.1.1.68/100

    SECRET_KEY:
      secretKeyRef:
        name: business-knowledge-outline-misc
        key: SecretKey

    UTILS_SECRET:
      secretKeyRef:
        name: business-knowledge-outline-misc
        key: UtilsSecret

  service:
    main:
      ports:
        main:
          port: 10196

  probes:
    liveness:
      path: "/_health"
    readiness:
      path: "/_health"
    startup:
      path: "/_health"

  # Enabled redis
  redis:
    enabled: false

  # Enabled postgres
  postgresql:
    enabled: false

  minio:
    enabled: false

  initContainers:
    1-migratedb:
      image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: business-knowledge-outline-db
              key: DBURI

        - name: REDIS_URL
          value: redis://10.1.1.68/100

        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: business-knowledge-outline-misc
              key: SecretKey

        - name: UTILS_SECRET
          valueFrom:
            secretKeyRef:
              name: business-knowledge-outline-misc
              key: UtilsSecret

      command:
        ["sh", "-c", "yarn sequelize db:migrate --env=production-ssl-disabled"]

  portal:
    enabled: false
