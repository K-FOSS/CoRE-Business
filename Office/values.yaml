collabora-code:
  # Default values for collabora-code.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: collabora/code
    tag: latest
    pullPolicy: IfNotPresent

  strategy: Recreate

  nameOverride: ""
  fullnameOverride: ""

  service:
    type: ClusterIP
    port: 9980

  ingress:
    enabled: false
    annotations: {}
    paths: []
    hosts: []
    tls: []

  collabora:
    DONT_GEN_SSL_CERT: true
    domain: office\\.mylogin\\.space
    extra_params: --o:ssl.termination=true --o:ssl.enable=false --o:net.proto=IPv4 --o:net.post_allow.host[0]=.+ --o:storage.wopi.host[0]=.+
    server_name: collabora\.mylogin\.space
    password: examplepass
    username: admin
    dictionaries: de_DE en_GB en_US es_ES fr_FR it nl pt_BR pt_PT ru

  securitycontext:
    allowPrivilegeEscalation: true
    capabilities:
      add:
      - MKNOD

  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 2
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
    scheme: HTTP
    path: /

  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 2
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
    scheme: HTTP
    path: /
              
nextcloud:
  ## Official nextcloud image version
  ## ref: https://hub.docker.com/r/library/nextcloud/tags/
  ##
  image:
    repository: nextcloud
    tag: fpm-alpine
    pullPolicy: Always
    # pullSecrets:
    #   - myRegistrKeySecretName

  nameOverride: ""
  fullnameOverride: ""

  deploymentAnnotations: {}


  podAnnotations: {}

  podLabels:
    logs: loki-myloginspace



  # Number of replicas to be deployed
  replicaCount: 1

  ## Allowing use of ingress controllers
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  ingress:
    enabled: false


  # Allow configuration of lifecycle hooks
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
  lifecycle: {}
    # postStartCommand: []
    # preStopCommand: []

  phpClientHttpsFix:
    enabled: false
    protocol: https

  nextcloud:

    ## Use an existing secret
    existingSecret:
      enabled: true
      secretName: business-office-nextcloud-keys-prod
      usernameKey: AdminUser
      passwordKey: AdminPassword
      tokenKey: TOKEN
      # smtpUsernameKey: smtp_username
      # smtpPasswordKey: smtp_password

    update: 0

    # If web server is not binding default port, you can define it
    # containerPort: 8080
    datadir: /var/www/html/data

    persistence:
      subPath:

    mail:
      enabled: false
      fromAddress: user
      domain: domain.com
      smtp:
        host: domain.com
        secure: ssl
        port: 465
        authtype: LOGIN
        name: user
        password: pass

    # PHP Configuration files
    # Will be injected in /usr/local/etc/php/conf.d for apache image and in /usr/local/etc/php-fpm.d when nginx.enabled: true
    phpConfigs:
      redis-cluster.ini: |-
        session.save_handler = redis
        redis.session.locking_enabled=1
        redis.session.lock_retries=-1
        redis.session.lock_wait_time=10000

      www.conf: |-
        ; Start a new pool named 'www'.
        ; the variable $pool can be used in any directive and will be replaced by the
        ; pool name ('www' here)
        [www]

        ; Per pool prefix
        ; It only applies on the following directives:
        ; - 'access.log'
        ; - 'slowlog'
        ; - 'listen' (unixsocket)
        ; - 'chroot'
        ; - 'chdir'
        ; - 'php_values'
        ; - 'php_admin_values'
        ; When not set, the global prefix (or NONE) applies instead.
        ; Note: This directive can also be relative to the global prefix.
        ; Default Value: none
        ;prefix = /path/to/pools/$pool

        ; Unix user/group of processes
        ; Note: The user is mandatory. If the group is not set, the default user's group
        ;       will be used.
        user = www-data
        group = www-data

        ; The address on which to accept FastCGI requests.
        ; Valid syntaxes are:
        ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
        ;                            a specific port;
        ;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
        ;                            a specific port;
        ;   'port'                 - to listen on a TCP socket to all addresses
        ;                            (IPv6 and IPv4-mapped) on a specific port;
        ;   '/path/to/unix/socket' - to listen on a unix socket.
        ; Note: This value is mandatory.
        listen = 127.0.0.1:9000

        ; Set listen(2) backlog.
        ; Default Value: 511 (-1 on FreeBSD and OpenBSD)
        ;listen.backlog = 511

        ; Set permissions for unix socket, if one is used. In Linux, read/write
        ; permissions must be set in order to allow connections from a web server. Many
        ; BSD-derived systems allow connections regardless of permissions. The owner
        ; and group can be specified either by name or by their numeric IDs.
        ; Default Values: user and group are set as the running user
        ;                 mode is set to 0660
        ;listen.owner = www-data
        ;listen.group = www-data
        ;listen.mode = 0660
        ; When POSIX Access Control Lists are supported you can set them using
        ; these options, value is a comma separated list of user/group names.
        ; When set, listen.owner and listen.group are ignored
        ;listen.acl_users =
        ;listen.acl_groups =

        ; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect.
        ; Equivalent to the FCGI_WEB_SERVER_ADDRS environment variable in the original
        ; PHP FCGI (5.2.2+). Makes sense only with a tcp listening socket. Each address
        ; must be separated by a comma. If this value is left blank, connections will be
        ; accepted from any ip address.
        ; Default Value: any
        ;listen.allowed_clients = 127.0.0.1

        ; Specify the nice(2) priority to apply to the pool processes (only if set)
        ; The value can vary from -19 (highest priority) to 20 (lower priority)
        ; Note: - It will only work if the FPM master process is launched as root
        ;       - The pool processes will inherit the master process priority
        ;         unless it specified otherwise
        ; Default Value: no set
        ; process.priority = -19

        ; Set the process dumpable flag (PR_SET_DUMPABLE prctl) even if the process user
        ; or group is different than the master process user. It allows to create process
        ; core dump and ptrace the process for the pool user.
        ; Default Value: no
        ; process.dumpable = yes

        ; Choose how the process manager will control the number of child processes.
        ; Possible Values:
        ;   static  - a fixed number (pm.max_children) of child processes;
        ;   dynamic - the number of child processes are set dynamically based on the
        ;             following directives. With this process management, there will be
        ;             always at least 1 children.
        ;             pm.max_children      - the maximum number of children that can
        ;                                    be alive at the same time.
        ;             pm.start_servers     - the number of children created on startup.
        ;             pm.min_spare_servers - the minimum number of children in 'idle'
        ;                                    state (waiting to process). If the number
        ;                                    of 'idle' processes is less than this
        ;                                    number then some children will be created.
        ;             pm.max_spare_servers - the maximum number of children in 'idle'
        ;                                    state (waiting to process). If the number
        ;                                    of 'idle' processes is greater than this
        ;                                    number then some children will be killed.
        ;  ondemand - no children are created at startup. Children will be forked when
        ;             new requests will connect. The following parameter are used:
        ;             pm.max_children           - the maximum number of children that
        ;                                         can be alive at the same time.
        ;             pm.process_idle_timeout   - The number of seconds after which
        ;                                         an idle process will be killed.
        ; Note: This value is mandatory.
        pm = dynamic

        ; The number of child processes to be created when pm is set to 'static' and the
        ; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
        ; This value sets the limit on the number of simultaneous requests that will be
        ; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
        ; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
        ; CGI. The below defaults are based on a server without much resources. Don't
        ; forget to tweak pm.* to fit your needs.
        ; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
        ; Note: This value is mandatory.
        pm.max_children = 256

        ; The number of child processes created on startup.
        ; Note: Used only when pm is set to 'dynamic'
        ; Default Value: (min_spare_servers + max_spare_servers) / 2
        pm.start_servers = 64

        ; The desired minimum number of idle server processes.
        ; Note: Used only when pm is set to 'dynamic'
        ; Note: Mandatory when pm is set to 'dynamic'
        pm.min_spare_servers = 64

        ; The desired maximum number of idle server processes.
        ; Note: Used only when pm is set to 'dynamic'
        ; Note: Mandatory when pm is set to 'dynamic'
        pm.max_spare_servers = 128

        ; The number of seconds after which an idle process will be killed.
        ; Note: Used only when pm is set to 'ondemand'
        ; Default Value: 10s
        ;pm.process_idle_timeout = 30s;

        ; The number of requests each child process should execute before respawning.
        ; This can be useful to work around memory leaks in 3rd party libraries. For
        ; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
        ; Default Value: 0
        ;pm.max_requests = 500

        ; The URI to view the FPM status page. If this value is not set, no URI will be
        ; recognized as a status page. It shows the following information:
        ;   pool                 - the name of the pool;
        ;   process manager      - static, dynamic or ondemand;
        ;   start time           - the date and time FPM has started;
        ;   start since          - number of seconds since FPM has started;
        ;   accepted conn        - the number of request accepted by the pool;
        ;   listen queue         - the number of request in the queue of pending
        ;                          connections (see backlog in listen(2));
        ;   max listen queue     - the maximum number of requests in the queue
        ;                          of pending connections since FPM has started;
        ;   listen queue len     - the size of the socket queue of pending connections;
        ;   idle processes       - the number of idle processes;
        ;   active processes     - the number of active processes;
        ;   total processes      - the number of idle + active processes;
        ;   max active processes - the maximum number of active processes since FPM
        ;                          has started;
        ;   max children reached - number of times, the process limit has been reached,
        ;                          when pm tries to start more children (works only for
        ;                          pm 'dynamic' and 'ondemand');
        ; Value are updated in real time.
        ; Example output:
        ;   pool:                 www
        ;   process manager:      static
        ;   start time:           01/Jul/2011:17:53:49 +0200
        ;   start since:          62636
        ;   accepted conn:        190460
        ;   listen queue:         0
        ;   max listen queue:     1
        ;   listen queue len:     42
        ;   idle processes:       4
        ;   active processes:     11
        ;   total processes:      15
        ;   max active processes: 12
        ;   max children reached: 0
        ;
        ; By default the status page output is formatted as text/plain. Passing either
        ; 'html', 'xml' or 'json' in the query string will return the corresponding
        ; output syntax. Example:
        ;   http://www.foo.bar/status
        ;   http://www.foo.bar/status?json
        ;   http://www.foo.bar/status?html
        ;   http://www.foo.bar/status?xml
        ;
        ; By default the status page only outputs short status. Passing 'full' in the
        ; query string will also return status for each pool process.
        ; Example:
        ;   http://www.foo.bar/status?full
        ;   http://www.foo.bar/status?json&full
        ;   http://www.foo.bar/status?html&full
        ;   http://www.foo.bar/status?xml&full
        ; The Full status returns for each process:
        ;   pid                  - the PID of the process;
        ;   state                - the state of the process (Idle, Running, ...);
        ;   start time           - the date and time the process has started;
        ;   start since          - the number of seconds since the process has started;
        ;   requests             - the number of requests the process has served;
        ;   request duration     - the duration in µs of the requests;
        ;   request method       - the request method (GET, POST, ...);
        ;   request URI          - the request URI with the query string;
        ;   content length       - the content length of the request (only with POST);
        ;   user                 - the user (PHP_AUTH_USER) (or '-' if not set);
        ;   script               - the main script called (or '-' if not set);
        ;   last request cpu     - the %cpu the last request consumed
        ;                          it's always 0 if the process is not in Idle state
        ;                          because CPU calculation is done when the request
        ;                          processing has terminated;
        ;   last request memory  - the max amount of memory the last request consumed
        ;                          it's always 0 if the process is not in Idle state
        ;                          because memory calculation is done when the request
        ;                          processing has terminated;
        ; If the process is in Idle state, then informations are related to the
        ; last request the process has served. Otherwise informations are related to
        ; the current request being served.
        ; Example output:
        ;   ************************
        ;   pid:                  31330
        ;   state:                Running
        ;   start time:           01/Jul/2011:17:53:49 +0200
        ;   start since:          63087
        ;   requests:             12808
        ;   request duration:     1250261
        ;   request method:       GET
        ;   request URI:          /test_mem.php?N=10000
        ;   content length:       0
        ;   user:                 -
        ;   script:               /home/fat/web/docs/php/test_mem.php
        ;   last request cpu:     0.00
        ;   last request memory:  0
        ;
        ; Note: There is a real-time FPM status monitoring sample web page available
        ;       It's available in: /usr/local/share/php/fpm/status.html
        ;
        ; Note: The value must start with a leading slash (/). The value can be
        ;       anything, but it may not be a good idea to use the .php extension or it
        ;       may conflict with a real PHP file.
        ; Default Value: not set
        ;pm.status_path = /status

        ; The address on which to accept FastCGI status request. This creates a new
        ; invisible pool that can handle requests independently. This is useful
        ; if the main pool is busy with long running requests because it is still possible
        ; to get the status before finishing the long running requests.
        ;
        ; Valid syntaxes are:
        ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
        ;                            a specific port;
        ;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
        ;                            a specific port;
        ;   'port'                 - to listen on a TCP socket to all addresses
        ;                            (IPv6 and IPv4-mapped) on a specific port;
        ;   '/path/to/unix/socket' - to listen on a unix socket.
        ; Default Value: value of the listen option
        ;pm.status_listen = 127.0.0.1:9001

        ; The ping URI to call the monitoring page of FPM. If this value is not set, no
        ; URI will be recognized as a ping page. This could be used to test from outside
        ; that FPM is alive and responding, or to
        ; - create a graph of FPM availability (rrd or such);
        ; - remove a server from a group if it is not responding (load balancing);
        ; - trigger alerts for the operating team (24/7).
        ; Note: The value must start with a leading slash (/). The value can be
        ;       anything, but it may not be a good idea to use the .php extension or it
        ;       may conflict with a real PHP file.
        ; Default Value: not set
        ;ping.path = /ping

        ; This directive may be used to customize the response of a ping request. The
        ; response is formatted as text/plain with a 200 response code.
        ; Default Value: pong
        ;ping.response = pong

        ; The access log file
        ; Default: not set
        ;access.log = log/$pool.access.log

        ; The access log format.
        ; The following syntax is allowed
        ;  %%: the '%' character
        ;  %C: %CPU used by the request
        ;      it can accept the following format:
        ;      - %{user}C for user CPU only
        ;      - %{system}C for system CPU only
        ;      - %{total}C  for user + system CPU (default)
        ;  %d: time taken to serve the request
        ;      it can accept the following format:
        ;      - %{seconds}d (default)
        ;      - %{milliseconds}d
        ;      - %{mili}d
        ;      - %{microseconds}d
        ;      - %{micro}d
        ;  %e: an environment variable (same as $_ENV or $_SERVER)
        ;      it must be associated with embraces to specify the name of the env
        ;      variable. Some examples:
        ;      - server specifics like: %{REQUEST_METHOD}e or %{SERVER_PROTOCOL}e
        ;      - HTTP headers like: %{HTTP_HOST}e or %{HTTP_USER_AGENT}e
        ;  %f: script filename
        ;  %l: content-length of the request (for POST request only)
        ;  %m: request method
        ;  %M: peak of memory allocated by PHP
        ;      it can accept the following format:
        ;      - %{bytes}M (default)
        ;      - %{kilobytes}M
        ;      - %{kilo}M
        ;      - %{megabytes}M
        ;      - %{mega}M
        ;  %n: pool name
        ;  %o: output header
        ;      it must be associated with embraces to specify the name of the header:
        ;      - %{Content-Type}o
        ;      - %{X-Powered-By}o
        ;      - %{Transfert-Encoding}o
        ;      - ....
        ;  %p: PID of the child that serviced the request
        ;  %P: PID of the parent of the child that serviced the request
        ;  %q: the query string
        ;  %Q: the '?' character if query string exists
        ;  %r: the request URI (without the query string, see %q and %Q)
        ;  %R: remote IP address
        ;  %s: status (response code)
        ;  %t: server time the request was received
        ;      it can accept a strftime(3) format:
        ;      %d/%b/%Y:%H:%M:%S %z (default)
        ;      The strftime(3) format must be encapsuled in a %{<strftime_format>}t tag
        ;      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t
        ;  %T: time the log has been written (the request has finished)
        ;      it can accept a strftime(3) format:
        ;      %d/%b/%Y:%H:%M:%S %z (default)
        ;      The strftime(3) format must be encapsuled in a %{<strftime_format>}t tag
        ;      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t
        ;  %u: remote user
        ;
        ; Default: "%R - %u %t \"%m %r\" %s"
        ;access.format = "%R - %u %t \"%m %r%Q%q\" %s %f %{mili}d %{kilo}M %C%%"

        ; The log file for slow requests
        ; Default Value: not set
        ; Note: slowlog is mandatory if request_slowlog_timeout is set
        ;slowlog = log/$pool.log.slow

        ; The timeout for serving a single request after which a PHP backtrace will be
        ; dumped to the 'slowlog' file. A value of '0s' means 'off'.
        ; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
        ; Default Value: 0
        ;request_slowlog_timeout = 0

        ; Depth of slow log stack trace.
        ; Default Value: 20
        ;request_slowlog_trace_depth = 20

        ; The timeout for serving a single request after which the worker process will
        ; be killed. This option should be used when the 'max_execution_time' ini option
        ; does not stop script execution for some reason. A value of '0' means 'off'.
        ; Available units: s(econds)(default), m(inutes), h(ours), or d(ays)
        ; Default Value: 0
        ;request_terminate_timeout = 0

        ; The timeout set by 'request_terminate_timeout' ini option is not engaged after
        ; application calls 'fastcgi_finish_request' or when application has finished and
        ; shutdown functions are being called (registered via register_shutdown_function).
        ; This option will enable timeout limit to be applied unconditionally
        ; even in such cases.
        ; Default Value: no
        ;request_terminate_timeout_track_finished = no

        ; Set open file descriptor rlimit.
        ; Default Value: system defined value
        ;rlimit_files = 1024

        ; Set max core size rlimit.
        ; Possible Values: 'unlimited' or an integer greater or equal to 0
        ; Default Value: system defined value
        ;rlimit_core = 0

        ; Chroot to this directory at the start. This value must be defined as an
        ; absolute path. When this value is not set, chroot is not used.
        ; Note: you can prefix with '$prefix' to chroot to the pool prefix or one
        ; of its subdirectories. If the pool prefix is not set, the global prefix
        ; will be used instead.
        ; Note: chrooting is a great security feature and should be used whenever
        ;       possible. However, all PHP paths will be relative to the chroot
        ;       (error_log, sessions.save_path, ...).
        ; Default Value: not set
        ;chroot =

        ; Chdir to this directory at the start.
        ; Note: relative path can be used.
        ; Default Value: current directory or / when chroot
        ;chdir = /var/www

        ; Redirect worker stdout and stderr into main error log. If not set, stdout and
        ; stderr will be redirected to /dev/null according to FastCGI specs.
        ; Note: on highloaded environment, this can cause some delay in the page
        ; process time (several ms).
        ; Default Value: no
        ;catch_workers_output = yes

        ; Decorate worker output with prefix and suffix containing information about
        ; the child that writes to the log and if stdout or stderr is used as well as
        ; log level and time. This options is used only if catch_workers_output is yes.
        ; Settings to "no" will output data as written to the stdout or stderr.
        ; Default value: yes
        ;decorate_workers_output = no

        ; Clear environment in FPM workers
        ; Prevents arbitrary environment variables from reaching FPM worker processes
        ; by clearing the environment in workers before env vars specified in this
        ; pool configuration are added.
        ; Setting to "no" will make all environment variables available to PHP code
        ; via getenv(), $_ENV and $_SERVER.
        ; Default Value: yes
        ;clear_env = no

        ; Limits the extensions of the main script FPM will allow to parse. This can
        ; prevent configuration mistakes on the web server side. You should only limit
        ; FPM to .php extensions to prevent malicious users to use other extensions to
        ; execute php code.
        ; Note: set an empty value to allow all extensions.
        ; Default Value: .php
        ;security.limit_extensions = .php .php3 .php4 .php5 .php7

        ; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
        ; the current environment.
        ; Default Value: clean env
        ;env[HOSTNAME] = $HOSTNAME
        ;env[PATH] = /usr/local/bin:/usr/bin:/bin
        ;env[TMP] = /tmp
        ;env[TMPDIR] = /tmp
        ;env[TEMP] = /tmp

        ; Additional php.ini defines, specific to this pool of workers. These settings
        ; overwrite the values previously defined in the php.ini. The directives are the
        ; same as the PHP SAPI:
        ;   php_value/php_flag             - you can set classic ini defines which can
        ;                                    be overwritten from PHP call 'ini_set'.
        ;   php_admin_value/php_admin_flag - these directives won't be overwritten by
        ;                                     PHP call 'ini_set'
        ; For php_*flag, valid values are on, off, 1, 0, true, false, yes or no.

        ; Defining 'extension' will load the corresponding shared extension from
        ; extension_dir. Defining 'disable_functions' or 'disable_classes' will not
        ; overwrite previously defined php.ini values, but will append the new value
        ; instead.

        ; Note: path INI options can be relative and will be expanded with the prefix
        ; (pool, global or /usr/local)

        ; Default Value: nothing is defined by default except the values in php.ini and
        ;                specified at startup with the -d argument
        ;php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
        ;php_flag[display_errors] = off
        ;php_admin_value[error_log] = /var/log/fpm-php.www.log
        ;php_admin_flag[log_errors] = on
        ;php_admin_value[memory_limit] = 32M
    
    
    # Default config files
    # IMPORTANT: Will be used only if you put extra configs, otherwise default will come from nextcloud itself
    # Default confgurations can be found here: https://github.com/nextcloud/docker/tree/master/16.0/apache/config
    defaultConfigs:
      # To protect /var/www/html/config
      .htaccess: true

      # Redis default configuration
      redis.config.php: false

      # Apache configuration for rewrite urls
      apache-pretty-urls.config.php: false

      # Define APCu as local cache
      apcu.config.php: false

      # Apps directory configs
      apps.config.php: true

      # Used for auto configure database
      autoconfig.php: true

      # SMTP default configuration
      smtp.config.php: false

    # Extra config files created in /var/www/html/config/
    # ref: https://docs.nextcloud.com/server/15/admin_manual/configuration_server/config_sample_php_parameters.html#multiple-config-php-file
    configs:
      logging.config.php: |-
        <?php
        $CONFIG = array (
          'log_type' => 'syslog',
          'logtimezone' => 'America/Winnipeg',
        );

      redis.config.php: |-
        <?php
        $CONFIG = array (
          'memcache.local' => '\OC\Memcache\Redis',
          'memcache.distributed' => '\OC\Memcache\Redis',
          'memcache.locking' => '\\OC\\Memcache\\Redis',
          'filelocking.enabled' => true,
          'redis' => array(
            'host' => getenv('REDIS_HOST'),
            'port' => getenv('REDIS_HOST_PORT') ?: 6379,
            'dbindex' => 50
          )
        );

      db.config.php: |-
        <?php
          $CONFIG = array (
            'dbtype' => 'pgsql',
            'dbname' => getenv('POSTGRES_DB'),
            'dbhost' => 'psql-core.mylogin.space:5432',
            'dbport' => '',
            'dbtableprefix' => 'oc_',
            'dbuser' => getenv('POSTGRES_USER'),
            'dbpassword' => getenv('POSTGRES_PASSWORD'),
          );

      secrets.config.php: |-
        <?php
          $CONFIG = array (
            'passwordsalt' => getenv('PASSWORD_SALT'),
            'secret' => getenv('SECRET'),
            'allow_local_remote_servers' => true,
          );

    ## Strategy used to replace old pods
    ## IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    strategy:
      type: Recreate
      # type: RollingUpdate
      # rollingUpdate:
      #   maxSurge: 1
      #   maxUnavailable: 0

    ##
    ## Extra environment variables
    extraEnv:
      #
      # Database
      #
      # - name: POSTGRES_HOST
      #   value: 'psql.service.dc1.kjdev:5432'

      # - name: POSTGRES_DB
      #   valueFrom:
      #     secretKeyRef:
      #       name: business-office-nextcloud-database-prod
      #       key: DatabaseDatabase

      # - name: POSTGRES_USER
      #   valueFrom:
      #     secretKeyRef:
      #       name: business-office-nextcloud-database-prod
      #       key: Username
    
      # - name: POSTGRES_PASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       name: business-office-nextcloud-database-prod
      #       key: Password


      #
      # Secrets
      #

      - name: PASSWORD_SALT
        valueFrom:
          secretKeyRef:
            name: business-office-nextcloud-keys-prod
            key: PasswordSalt

      - name: SECRET
        valueFrom:
          secretKeyRef:
            name: business-office-nextcloud-keys-prod
            key: Secret

      #
      # S3
      #

      #
      # Redis
      #
      - name: REDIS_HOST
        value: 'redis.mylogin.space'

      #
      # Storage
      #
      - name: OBJECTSTORE_S3_HOST
        value: s3.mylogin.space

      - name: OBJECTSTORE_S3_PORT
        value: '443'

      - name: OBJECTSTORE_S3_SSL
        value: 'true'

      - name: OBJECTSTORE_S3_BUCKET
        valueFrom:
          secretKeyRef:
            name: business-office-nextcloud-s3-prod
            key: S3Bucket

      - name: OBJECTSTORE_S3_KEY
        valueFrom:
          secretKeyRef:
            name: business-office-nextcloud-s3-prod
            key: S3AccessKey

      - name: OBJECTSTORE_S3_SECRET
        valueFrom:
          secretKeyRef:
            name: business-office-nextcloud-s3-prod
            key: S3SecretKey


    # Extra mounts for the pods. Example shown is for connecting a legacy NFS volume
    # to NextCloud pods in Kubernetes. This can then be configured in External Storage
    extraVolumes: []
    #  - name: nfs
    #    nfs:
    #      server: "10.0.0.1"
    #      path: "/nextcloud_data"
    #      readOnly: false
    extraVolumeMounts: []
    #  - name: nfs
    #    mountPath: "/legacy_data"

    # Extra secuurityContext parameters. For example you may need to define runAsNonRoot directive
    extraSecurityContext: {}
    #   runAsUser: "33"
    #   runAsGroup: "33"
    #   runAsNonRoot: true
    #   readOnlyRootFilesystem: true

  nginx:
    ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
    enabled: true
    image:
      repository: nginx
      tag: alpine
      pullPolicy: IfNotPresent

    config:
      # This generates the default nginx config as per the nextcloud documentation
      default: true
      custom: |-
        worker_processes auto;

        error_log  /var/log/nginx/error.log warn;
        pid        /var/run/nginx.pid;


        events {
            worker_connections  1024;
        }


        http {
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;

            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';

            access_log  /var/log/nginx/access.log  main;

            sendfile        on;
            #tcp_nopush     on;

            keepalive_timeout  65;

            #gzip  on;

            upstream php-handler {
                server 127.0.0.1:9000;
            }

            server {
                listen 80;

                # HSTS settings
                # WARNING: Only add the preload option once you read about
                # the consequences in https://hstspreload.org/. This option
                # will add the domain to a hardcoded list that is shipped
                # in all major browsers and getting removed from this list
                # could take several months.
                #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;

                # set max upload size
                client_max_body_size 10G;
                fastcgi_buffers 64 4K;

                # Pagespeed is not supported by Nextcloud, so if your server is built
                # with the `ngx_pagespeed` module, uncomment this line to disable it.
                #pagespeed off;

                # HTTP response headers borrowed from Nextcloud `.htaccess`
                add_header Referrer-Policy                      "no-referrer"   always;
                add_header X-Content-Type-Options               "nosniff"       always;
                add_header X-Download-Options                   "noopen"        always;
                add_header X-Frame-Options                      "SAMEORIGIN"    always;
                add_header X-Permitted-Cross-Domain-Policies    "none"          always;
                add_header X-Robots-Tag                         "none"          always;
                add_header X-XSS-Protection                     "1; mode=block" always;

                # Remove X-Powered-By, which is an information leak
                fastcgi_hide_header X-Powered-By;

                # Path to the root of your installation
                root /var/www/html;

                # Specify how to handle directories -- specifying `/index.php$request_uri`
                # here as the fallback means that Nginx always exhibits the desired behaviour
                # when a client requests a path that corresponds to a directory that exists
                # on the server. In particular, if that directory contains an index.php file,
                # that file is correctly served; if it doesn't, then the request is passed to
                # the front-end controller. This consistent behaviour means that we don't need
                # to specify custom rules for certain paths (e.g. images and other assets,
                # `/updater`, `/ocm-provider`, `/ocs-provider`), and thus
                # `try_files $uri $uri/ /index.php$request_uri`
                # always provides the desired behaviour.
                index index.php index.html /index.php$request_uri;

                # Rule borrowed from `.htaccess` to handle Microsoft DAV clients
                location = / {
                    if ( $http_user_agent ~ ^DavClnt ) {
                        return 302 /remote.php/webdav/$is_args$args;
                    }
                }

                location = /robots.txt {
                    allow all;
                    log_not_found off;
                    access_log off;
                }

                # Make a regex exception for `/.well-known` so that clients can still
                # access it despite the existence of the regex rule
                # `location ~ /(\.|autotest|...)` which would otherwise handle requests
                # for `/.well-known`.
                location ^~ /.well-known {
                    # The following 6 rules are borrowed from `.htaccess`

                    location = /.well-known/carddav     { return 301 /remote.php/dav/; }
                    location = /.well-known/caldav      { return 301 /remote.php/dav/; }
                    # Anything else is dynamically handled by Nextcloud
                    location ^~ /.well-known            { return 301 /index.php$uri; }

                    try_files $uri $uri/ =404;
                }

                # Rules borrowed from `.htaccess` to hide certain paths from clients
                location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
                location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)              { return 404; }

                # Ensure this block, which passes PHP files to the PHP process, is above the blocks
                # which handle static assets (as seen below). If this block is not declared first,
                # then Nginx will encounter an infinite rewriting loop when it prepends `/index.php`
                # to the URI, resulting in a HTTP 500 error response.
                location ~ \.php(?:$|/) {
                    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                    set $path_info $fastcgi_path_info;

                    try_files $fastcgi_script_name =404;

                    include fastcgi_params;
                    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                    fastcgi_param PATH_INFO $path_info;
                    #fastcgi_param HTTPS on;

                    fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
                    fastcgi_param front_controller_active true;     # Enable pretty urls
                    fastcgi_pass php-handler;

                    fastcgi_intercept_errors on;
                    fastcgi_request_buffering off;
                }

                location ~ \.(?:css|js|svg|gif)$ {
                    try_files $uri /index.php$request_uri;
                    expires 6M;         # Cache-Control policy borrowed from `.htaccess`
                    access_log off;     # Optional: Don't log access to assets
                }

                location ~ \.woff2?$ {
                    try_files $uri /index.php$request_uri;
                    expires 7d;         # Cache-Control policy borrowed from `.htaccess`
                    access_log off;     # Optional: Don't log access to assets
                }

                location / {
                    try_files $uri $uri/ /index.php$request_uri;
                }
            }
        }

    resources: {}

  internalDatabase:
    enabled: false
    name: nextcloud

  ##
  ## External database configuration
  ##
  externalDatabase:
    enabled: true

    ## Supported database engines: mysql or postgresql
    type: postgresql

    ## Database host
    host: psql-core.mylogin.space:5432

    ## Database name
    database: SzS9n9UxZS

    ## Use a existing secret
    existingSecret:
      enabled: true
      secretName: nc-office-creds
      usernameKey: username
      passwordKey: password

  ##
  ## MariaDB chart configuration
  ##
  mariadb:
    ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
    enabled: false

  ##
  ## PostgreSQL chart configuration
  ## for more options see https://github.com/bitnami/charts/tree/master/bitnami/postgresql
  ##
  postgresql:
    enabled: false

  ##
  ## Redis chart configuration
  ## for more options see https://github.com/bitnami/charts/tree/master/bitnami/redis
  ##

  redis:
    enabled: false


  ## Cronjob to execute Nextcloud background tasks
  ## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#webcron
  ##
  cronjob:
    enabled: false
    # Nexcloud image is used as default but only curl is needed
    image: {}
      # repository: nextcloud
      # tag: 16.0.3-apache
      # pullPolicy: IfNotPresent
      # pullSecrets:
      #   - myRegistrKeySecretName
    # Every 5 minutes
    # Note: Setting this to any any other value than 5 minutes might
    #  cause issues with how nextcloud background jobs are executed
    schedule: "*/5 * * * *"
    annotations: {}
    # Set curl's insecure option if you use e.g. self-signed certificates
    curlInsecure: false
    failedJobsHistoryLimit: 5
    successfulJobsHistoryLimit: 2
    # If not set, nextcloud deployment one will be set
    # resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #  cpu: 100m
      #  memory: 128Mi
      # requests:
      #  cpu: 100m
      #  memory: 128Mi

    # If not set, nextcloud deployment one will be set
    # nodeSelector: {}

    # If not set, nextcloud deployment one will be set
    # tolerations: []

    # If not set, nextcloud deployment one will be set
    # affinity: {}

  service:
    type: ClusterIP
    port: 8080
    loadBalancerIP: ''
    nodePort: ''

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    # Nextcloud Data (/var/www/html)
    enabled: true
    annotations: {}
    ## nextcloud data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    accessMode: ReadWriteOnce
    size: 25Gi

    ## Use an additional pvc for the data directory rather than a subpath of the default PVC
    ## Useful to store data on a different storageClass (e.g. on slower disks)
    nextcloudData:
      enabled: false
      subPath:
      annotations: {}
      # storageClass: "-"
      # existingClaim:
      accessMode: ReadWriteOnce
      size: 8Gi

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      #cpu: 100m
      memory: 8G
    requests:
      cpu: 256m
      memory: 256Mi

  ## Liveness and readiness probe values
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1


  ## Enable pod autoscaling using HorizontalPodAutoscaler
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ##
  hpa:
    enabled: false
    cputhreshold: 60
    minPods: 1
    maxPods: 10

  nodeSelector: {}

  tolerations: []

  affinity: {}


  ## Prometheus Exporter / Metrics
  ##
  metrics:
    enabled: false

    replicaCount: 1
    # The metrics exporter needs to know how you serve Nextcloud either http or https
    https: false
    # Use API token if set, otherwise fall back to password authentication
    # https://github.com/xperimental/nextcloud-exporter#token-authentication
    # Currently you still need to set the token manually in your nextcloud install
    token: ""
    timeout: 5s

    image:
      repository: xperimental/nextcloud-exporter
      tag: 0.5.1
      pullPolicy: IfNotPresent

    ## Metrics exporter resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    # resources: {}

    ## Metrics exporter pod Annotation and Labels
    # podAnnotations: {}

    # podLabels: {}

    service:
      type: ClusterIP
      ## Use serviceLoadBalancerIP to request a specific static IP,
      ## otherwise leave blank
      # loadBalancerIP:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9205'
      labels: {}

  rbac:
    enabled: true
    serviceaccount:
      create: true
      name: nextcloud-serviceaccount

vikunja:
  #
  # IMPORTANT NOTE
  #
  # This chart inherits from our common library chart. You can check the default values/options here:
  # https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
  #

  enabled: false

  image:
    # -- Caddy reverse proxy image and tag
    repository: caddy
    # -- vikunja api image tag
    tag: 2.4.2-alpine
    # vikunja api image pull policy
    pullPolicy: IfNotPresent

  caddy:
    # -- Disable auto tls if behind another loadbalancer or ingress
    noTls: false

  vikunja:
    # -- Provide Vikunja config as YAML string
    config: |-
      service:
        jwtsecret: "myVeryComplexJWTSecret"

  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      ports:
        http:
          port: 8080

  ingress:
    # -- Enable and configure ingress settings for the chart under this key.
    # @default -- See values.yaml
    main:
      enabled: false

  additionalContainers:
    # -- Set up the vikunja API container.
    # @default -- See values.yaml
    api:
      name: api
      # -- Vikunja api image and tag
      image: vikunja/api:0.17.1
      imagePullPolicy: IfNotPresent
      # -- You can declare most Vikunja parameters as environment variables.
      # Please consult https://vikunja.io/docs/config-options/ to see all parameters.
      # Note that parameters that are an array cannot be defined as environment variables (like the OpenID Connect settings). Use the vikunja.config Value for that.
      # @default -- See below
      env: []
        # - name: VIKUNJA_SERVICE_JWTSECRET
        #   value: myVeryComplexJWTSecret
        # - name: VIKUNJA_DATABASE_TYPE
        #   value: "postgres"
        # - name: VIKUNJA_DATABASE_HOST
        #   value: db
        # - name: VIKUNJA_DATABASE_DATABASE
        #   value: vikunja
        # - name: VIKUNJA_DATABASE_USER
        #   value: "vikunja"
        # - name: VIKUNJA_DATABASE_PASSWORD
        #   value: password

      volumeMounts:
        - name: vikunja-config
          mountPath: /etc/vikunja/config.yml
          subPath: Vikunja.yaml
        # - name: files
        #   mountPath: /app/vikunja/files

    # -- Set up the vikunja frontend container.
    # @default -- See values.yaml
    frontend:
      name: frontend
      # -- Vikunja frontend image and tag
      image: vikunja/frontend:0.17.0
      imagePullPolicy: IfNotPresent

  # -- Configure persistence settings for the chart under this key.
  # @default -- See values.yaml
  persistence:
  # -- Volume used for static files
    files:
      enabled: false
      mountpath: /app/vikunja/files
